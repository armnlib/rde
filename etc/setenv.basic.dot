#!/bin/ksh
if [[ x"${0##*/}" == x"setenv.basic.dot" || \
      x"${0##*/}" == x".setenv.dot" ]] ; then
   cat<<EOF1
=======================================
ERROR: This script should be sourced
       . $0 [COMP_ARCH]
=======================================
EOF1
   exit 1
fi

##
# Basic PF and project Env.Var.
##
if [[ x${BASE_ARCH} == xAIX || x${BASE_ARCH} == xAIX-powerpc7 ]] ; then
   s.use gmake as make
fi
if [[ -r .pf.init.dot ]] ; then
   . .pf.init.dot
fi

if [[ x$purplefrog == x ]] ; then
   cat<<EOF
====================================================================
ERROR: You must load purplefrog in your environment before anything
====================================================================
EOF
   return 1
fi


##
# Compiler
##
if [[ -r  .pf.comp.${BASE_ARCH}.dot ]] ; then
   . .pf.comp.${BASE_ARCH}.dot
fi
export PF_COMPILER_VERSION=${PF_COMPILER_VERSION:-1.1.0}
export COMP_ARCH=${1:-$COMP_ARCH}
purplefroginc=${purplefrog}/include/${PF_COMPILER_VERSION}
if [[ -r  ${purplefroginc}/${BASE_ARCH}/default.comp.dot ]] ; then
   . ${purplefroginc}/${BASE_ARCH}/default.comp.dot
fi
export EC_ARCH=${BASE_ARCH}/${COMP_ARCH}

if [[ ! -f ${purplefroginc}/${EC_ARCH}/setenv.dot ]] ; then
   cat<<EOF
====================================================================
ERROR: Compiler not supported by purplefrog: "${COMP_ARCH}" [${PF_COMPILER_VERSION}]

Supported compilers for this ARCH:
$(cd ${purplefroginc}/${BASE_ARCH} ; itemlist="$(find . -name setenv.dot)" ; for item in $itemlist ; do item=${item%/*} ; echo "   ${item#*/}"; done)
====================================================================
EOF
   return 1
fi

for item in \
   ${purplefroginc}/${EC_ARCH}/setenv.dot \
   .pf.project.dot \
   .pf.project.setenv.dot \
   user.setenv.dot ; do
   if [[ -r $item ]] ; then
      . $item
   fi
done

export ATM_MODEL_NAME=${ATM_MODEL_NAME:-noname}
export ATM_MODEL_VERSION=${ATM_MODEL_VERSION:-1.0.0}

##
# Cleanup empty include dir
##
mytmp=""
for item in $EC_INCLUDE_PATH; do 
   if [[ x$(ls -1 ${item#-I} | wc -l | cut -d" " -f1) != x0 ]] ; then 
      mytmp="$mytmp $item"
   fi
done
mytmp="$(echo $mytmp)"
export EC_INCLUDE_PATH="$mytmp"

##
# PATH
##
#for myarch in  / /${BASE_ARCH} /${EC_ARCH} ; do
for myarch in  / /${BASE_ARCH} ; do
   for item in ref/bin bin ; do
      export PATH=$(pwd)/${item}${myarch}:$PATH
   done
done
export PATH=$(pwd)/$(pfmodel_link build/bin):$PATH

return 0

