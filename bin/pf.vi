#!/bin/ksh
# @Object: Open editor with files in build or src directory
# @Author: S.Chamberland
# @Date:   March 2014
. pf.base.inc.ksh

DESC='Open editor with files in build or src directory'
USAGE="USAGE: ${MYSELF} [-h] [-b|-s|-l] [-v|-e] FILENAME [FILENAME2 ...]"

prog=${0##*/}
prog=${prog#*.}
EDITOR=${EDITOR:-$prog}

usage_long() {
	 toto=$(echo -e $USAGE)
	 more <<EOF
$DESC

$toto

Options:
    -h, --help : print this help
    -s: open ${SRC_USR}/FILENAME (DEFAULT)
    -l: open ${SRC_LIB}/FILENAME
    -b: open ${BUILD_SRC}/FILENAME or ${BUILD_PRE}/FILENAME 
    -v: use vi    (DEFAULT: EDITOR=${EDITOR})
    -e: use emacs (DEFAULT: EDITOR=${EDITOR})
EOF
}

mydir=${SRC_USR}
files=""
binmode=0
while [[ $# -gt 0 ]] ; do
   case $1 in
      (-h|--help) usage_long; exit 0;;
      (-b) mydir=${BUILD_SRC} ; binmode=1;;
      (-s) mydir=${SRC_USR} ; binmode=0;;
      (-l) mydir=${SRC_LIB} ; binmode=0;;
      (-e) EDITOR=emacs;;
      (-v) EDITOR=vi;;
      (--) shift ; break;;
      (-*) myerror "Option Not recognized: $1";;
        *) files="$files $1"
    esac
	 previous=$1
    shift
done
files="$files $@"

if [[ x"$files" == x ]] ; then
   myerror "Must provide at least one filename"
fi

files2=""
for item in $files ; do
   if [[ $binmode == 1 && -f $BUILD_PRE/$item && ! -f $mydir/$item ]] ; then
      files2="$file2s $BUILD_PRE/$item"
   else
      item2=$(echo_deleted_tag $item)
      if [[ $mydir == ${SRC_USR} && -f ${SRC_USR}/$item2 ]] ; then
         myecho 0 "WARNING: file $item was marked as deleted, before editing,\n\tremove ${SRC_USR}/$item2"
      else
         files2="$file2s $mydir/$item"
      fi
   fi
done
set -x
if [[ x"$files2" != x ]] ; then
   $EDITOR $files2
else
   myecho 0 "No files to edit"
fi
