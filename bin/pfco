#!/bin/ksh
# @Object: Checkout library version of a source file
# @Author: S.Chamberland
# @Date:   March 2014
. .pfbase.inc.dot

DESC='Checkout library version of a source file'
USAGE="USAGE: ${MYSELF} [-h] [-v] [-f] FILES"

usage_long() {
	 toto=$(echo -e $USAGE)
	 more <<EOF
$DESC

$toto

Options:
    -h, --help         : print this help
    -v, --verbose      : verbose mode
    -f, --force        : 
    FILES              : space separated list of src files or dir

EOF
}

mystatus=0
myforce=0
while [[ $# -gt 0 ]] ; do
   case $1 in
      (-h|--help) usage_long; exit 0;;
      (-v|--verbose) ((verbose=verbose+1));;
      (-f|--force) myforce=1;;
      (--) shift ; break;;
      (-*) myerror "Option Not recognized: $1";;
        *) PATHLIST="$PATHLIST $1";;
    esac
	 previous=$1
    shift
done
PATHLIST="$PATHLIST $@"

pf_exit_if_not_pftopdir

# find_src MYDIR MYFILE
find_src() {
   _myfile=$2
   _here=$(pwd)
   cd ${ROOT}/${1}
   if [[ -r ${_myfile} ]] ; then
      echo ${_myfile}
   else
      _mypath="$(find $3 . -name ${_myfile} 2>/dev/null)"
      echo ${_mypath#./}
   fi
   cd ${_here}
}

for myfile in $PATHLIST ; do
   mypathlist="$(find_src ${SRC_REF} $myfile -L 2>/dev/null)"
   if [[ x${mypathlist} == x ]] ; then
      mypathlist="$(find_src ${BINREF} $myfile 2>/dev/null)"
      FROMPATH=${BINREF}
      TOPATH=${BINDIR}
   else
      FROMPATH=${SRC_REF}
      TOPATH=${SRC_USR}
   fi
   if [[ x${mypathlist} == x ]] ; then
      mystderr 0 "ERROR: File $myfile is not found in ${SRC_REF}/, ${BINREF}/"
      mystderr 0 "$(.pfsimilnames -v -r $myfile)"
      mystatus=1
   else
      for mypath in ${mypathlist} ; do
         isdir=0
         replaced=""
         #mypath=${mypath#*/}
         if [[ -e ${ROOT}/${TOPATH}/$mypath ]] ; then
            if [[ $myforce == 0 ]] ; then
            cat 1>&2 <<EOF
    WARNING: File $mypath already exists, overwrite with: 
             ${MYSELF} -f $myfile
EOF
               mypath=""
            else
               if [[ -d ${ROOT}/${TOPATH}/$mypath ]] ; then
                  isdir=1
                  rm -rf ${ROOT}/${TOPATH}/$mypath
                  replaced="(overwritting existing dir)"
              else
                  rm -f ${ROOT}/${TOPATH}/$mypath
                  replaced="(overwritting existing file)"
               fi
            fi
         fi

         if [[ x$mypath != x ]] ; then
            rm -f ${ROOT}/${TOPATH}/$(echo_deleted_tag ${mypath}) 2> /dev/null || true
            if [[ $isdir == 1 ]] ; then
               rsync -a ${ROOT}/${FROMPATH}/$mypath/ ${ROOT}/${TOPATH}/$mypath
            else
               rsync -a ${ROOT}/${FROMPATH}/$mypath ${ROOT}/${TOPATH}/$mypath
            fi
            chmod -R u+w ${ROOT}/${TOPATH}/$mypath
            if [[ x${replaced} != x ]] ; then
               touch ${ROOT}/${TOPATH}/$mypath
            fi
            cat <<EOF
    Checking out ${mypath} ${replaced}
EOF
         fi
      done
   fi
done

if [[ -f .pf.flatsrc ]] ; then
   pflinkflat
fi

exit $mystatus
