#!/bin/ksh

is_c=0
if [[ x$1 == x-c ]] ;then
   is_c=1
   shift
fi

ISOFFICIAL='.false.'
[[ x$ATM_MODEL_ISOFFICIAL == xtrue ]] && ISOFFICIAL='.true.'
MYARCH="$(uname -s)-$(uname -p|grep -v unknown)$(uname -v|cut -d' ' -f1|sed 's/#//').$(uname -r)"
COMP_ARCH=${COMP_ARCH:-${EC_ARCH#*/}}

if [[ x$is_c == x0 ]] ; then

cat <<EOF
       program modelbidon
          call $1
          stop
       end program modelbidon

       subroutine atm_model_getversion(name_S,version_S,date_S,arch_S,compil_S,is_official_L)
          implicit none
          character(len=*),intent(out) :: name_S,version_S,date_S,arch_S,compil_S
          logical,intent(out) :: is_official_L
          name_S = "$(echo ${ATM_MODEL_NAME:-$1} | tr 'a-z' 'A-Z')"
          version_S = "${ATM_MODEL_VERSION:-?.?}"
          date_S = "$(date '+%Y-%m-%d %H:%M %Z')"
          arch_S = "${BASE_ARCH:-$MYARCH}"
          compil_S = "${COMP_ARCH:-${EC_ARCH#*/}} [${PGI_VERSION}${XLF_VERSION}]"
          is_official_L = ${ISOFFICIAL:-.false.}
          return
       end subroutine atm_model_getversion
EOF

else

cat <<EOF
#include <unistd.h> 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void $1(int argc, char **argv);

main(int argc, char **argv){
   $1(argc, argv);
}
/*
void atm_model_getversion_c(char *name_S,char *version_S,char *date_S,char *arch_S,char *compil_S,int *is_official);

void atm_model_getversion_c(char *name_S,char *version_S,char *date_S,char *arch_S,char *compil_S,int *is_official){
          strcp(name_S,"$(echo ${ATM_MODEL_NAME:-$1} | tr 'a-z' 'A-Z')");
          strcp(version_S,"${ATM_MODEL_VERSION:-?.?}");
          strcp(date_S,"$(date '+%Y-%m-%d %H:%M %Z')");
          strcp(arch_S,"${BASE_ARCH:-$MYARCH}");
          strcp(compil_S,"${COMP_ARCH:-${EC_ARCH#*/}} [${PGI_VERSION}${XLF_VERSION}]");
          is_official = $([[ x${ISOFFICIA} == xtrue ]] && echo 1 || echo 0);
}
*/
EOF

fi
