#!/bin/ksh
. .pfbase.inc.dot

DESC='Grep (print lines matching a pattern) in src and src_ref'
USAGE="USAGE: ${MYSELF} [-l] [GREP_OPTIONS] SEARCH_STRING [PATH]"
usage_long() {
	 toto=$(echo -e $USAGE)
	 more <<EOF
$DESC

$toto

Options:
    -h, --help  : print this help
    --local     : search into locally modified src only
EOF
}

localonly=0
GREP_OPTIONS=""
while [[ $# -gt 0 ]] ; do
   case $1 in
      (-h|--help)  usage_long; exit 0;;
      (-l|--local) localonly=1;;
      -*) GREP_OPTIONS="$GREP_OPTIONS $1";;
      *) break;;
    esac
    shift
done

if [[ $# -lt 1 ]] ; then
   myerror "Need to provide a search string"
fi

SEARCH_STRING="$1"
shift
SEARCH_PATH=""
if [[ $# -gt 0 ]] ; then
   SEARCH_PATH="$1"
fi

pf_exit_if_not_pftopdir

SEARCH_PATH_BASE="${SRC_USR} ${SRC_REF}"
if [[ $localonly == 1 ]] ; then
   SEARCH_PATH_BASE="${SRC_USR}"
fi

if [[ -n ${SEARCH_PATH} ]] ; then

   for PATH_BASE in $SEARCH_PATH_BASE ; do
      if [[ -d ${PATH_BASE}/${SEARCH_PATH} ]] ; then
         set -x
         find -L ${PATH_BASE}/${SEARCH_PATH} -type f -exec grep -H ${GREP_OPTIONS} "${SEARCH_STRING}" {} \;
      else
         grep -H ${GREP_OPTIONS} "${SEARCH_STRING}" ${PATH_BASE}/${SEARCH_PATH}
      fi
   done

else

   set -x
   find -L ${SEARCH_PATH_BASE} -type f -exec grep -H ${GREP_OPTIONS} "${SEARCH_STRING}" {} \;

fi
