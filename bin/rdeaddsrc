#!/bin/ksh
#
. .rdebase.inc.dot

DESC='Add a path to SRCPATH for RPN Code Dev Env'
USAGE="USAGE: ${MYSELF} [-v] [-f] [-R] [-k] [--reset] DIRLIST"

usage_long() {
	 toto=$(echo -e $USAGE)
	 more <<EOF
$DESC

$toto

Options:
    -h, --help         : print this help
    -v, --verbose      : verbose mode
    -f, --force        : force add path even if not existing
    -R  --recurse      : recursively include dirs
        --reset        : replace existing SRCPATH if any
    -k, --keep         : keep existing SRCPATHFILE as backup if any

    DIRLIST: space separated
EOF
}

myforce=0
myreset=0
mykeep=0
myrecurse=0
DIRLIST=''
previous=""
while [[ $# -gt 0 ]] ; do
   case $1 in
      (-h|--help) usage_long; exit 0;;
      (-v|--verbose) ((verbose=verbose+1));;
      (-f|--force) myforce=1;;
      (-R|--recurse) myrecurse=9;;
      (-k|--keep) mykeep=1;;
      (--reset) myreset=1;;
      (--) shift ; break;;
      (-*) myerror "Option Not recognized: $1";;
        *) DIRLIST="$DIRLIST $1";;
    esac
    previous=$1
    shift
done
if [[ "x$*" != x ]] ; then
   DIRLIST="$DIRLIST $*"
fi
if [[ "x$DIRLIST" == x ]] ; then
   echo DIRLIST=$DIRLIST
   myerror "You need to provide at least one dir"
fi

SRCPATH="$(rdevar srcpath)"
SRCPATH_R="$(rdevar srcpath_r)"
if [[ x$myreset == x0 ]] ; then
   myrecurse0="$(rdevar srcpath_recurse)"
   if [[ x$myrecurse0 != x ]] ; then
      if [[ x$myrecurse0 != x$myrecurse && x$myrecurse != x0 ]] ; then
         myerror "Cannot change recursivity unless you use --reset"
      fi
      myrecurse=$myrecurse0
   fi
   mystderr 1 "Previous SRCPATH=$SRCPATH"
else
   mystderr 1 "Ignoring/Replacing Previous SRCPATH=$SRCPATH"
   SRCPATH=""
   SRCPATH_R=""
fi


SRCPATH1=""
for mydir in $DIRLIST; do
   if [[ ! -d $mydir ]] ; then
      if [[ x$myforce == x0 ]] ; then
         mystderr 0 "WARNING: Dir does not exist or unreadable, ignored: "
         mystderr 0 "$mydir"
         mystderr 0 "To force include use: ${MYSELF} -f $mydir"
         continue
      else
         mystderr 1 "WARNING: Dir does not exist or unreadable, forced include: "
         mystderr 1 "$mydir"
      fi
   fi
   SRCPATH1="$SRCPATH1 $mydir"
done
SRCPATH_R="$SRCPATH_R $SRCPATH1"
SRCPATH="\$SRCPATH_R"

#TODO: honnor .restricted whitelist file
#TODO: add option for arch_specific (would imply --keep to preserve other arch srcpath

if [[ x$myrecurse != x0 ]] ; then
   SRCPATH1=""
   for mydir in $SRCPATH_R; do
      mystderr 1 "Recursively Looking into: $mydir"
      #SRCPATH1="$SRCPATH1 $mydir"
      SRCPATH1="$SRCPATH1 $(find.py $mydir --type d --maxdepth $myrecurse --restricted --nodotdir --name '[a-zA-Z0-9]*')"
   done
   SRCPATH="$SRCPATH1"
fi


if [[ x$mykeep == x0 ]] ; then
   rm -f $SRC_PATH_FILE
fi
mystderr 1 "Setting SRCPATH=$SRCPATH"
cat >> $SRC_PATH_FILE <<EOF
SRCPATH_RECURSE=$myrecurse
SRCPATH_R="$SRCPATH_R"
SRCPATH="$SRCPATH"
EOF

