#!/bin/ksh
# @Object: Remove src file, local modifications and libs
# @Author: S.Chamberland
# @Date:   March 2014
. pf.base.inc.ksh

DESC='Remove src file, local modifications and libs'
USAGE="USAGE: ${MYSELF} [-h] [-v] [-l|--local_only] FILES"

usage_long() {
	 toto=$(echo -e $USAGE)
	 more <<EOF
$DESC

$toto

Options:
    -h, --help         : print this help
    -v, --verbose      : verbose mode
    -l, --local_only   : remove only local src modifications (leave lib copy)
                         If a lib version exists, it will bring it back
                         DEFAULT: removes local and lib copies
    FILES              : space separated list of src files to remove
EOF
}

mystatus=0
localonly=0
PATHLIST=""
while [[ $# -gt 0 ]] ; do
   case $1 in
      (-h|--help) usage_long; exit 0;;
      (-v|--verbose) ((verbose++));;
      (-l|--local_only) localonly=1;;
      (-*) myerror "Option Not recognized: $1";;
        *) PATHLIST="$PATHLIST $1" ;;
    esac
	 previous=$1
    shift
done

if [[ x"$PATHLIST" == x"" ]] ; then
   myerror "Must provide at least one FILE name"
fi

if [[ ! -d ${SRC_USR} || ! -w ${SRC_USR} ]] ; then
	 echo "ERROR: source dir does not exist or not writable ${SRC_USR}/"
	 echo "       Try running pf.prep"
	 echo "---- Abort ----"
	 exit 1
fi

if [[ ! -d ${SRC_LIB} ]] ; then
	 echo "ERROR: library source dir does not exist or not writable ${SRC_LIB}/"
	 echo "       Try running pf.prep"
	 echo "---- Abort ----"
	 exit 1
fi

isfile=0
for myfile in $PATHLIST ; do
   isfile0=0
   myfilerm=$(echo_deleted_tag $myfile)
   if [[ -f ${SRC_USR}/$myfile ]] ; then
      isfile0=1
      rm -f ${SRC_USR}/$myfile
      myecho 2 "Removing local version of: $myfile"
   else
      myecho 2 "No local version of: $myfile"
   fi
   if [[ -f ${SRC_LIB}/$myfile ]] ; then
      if [[ $localonly == 0 ]] ; then 
         if [[ ! -f ${SRC_USR}/${myfilerm} ]] ; then
            isfile0=1
            touch ${SRC_USR}/${myfilerm}
            myecho 2 "Removing lib version of: $myfile"
         else
            myecho 2 "Already removed lib version of: $myfile"
         fi
      else
         if [[ ! -f ${SRC_USR}/${myfilerm} ]] ; then
            myecho 2 "Leaving lib version of: $myfile"
         else
            myecho 1 "Bringing back lib version of: $myfile"
            rm -f ${SRC_USR}/${myfilerm}
         fi
      fi
   fi
   if [[ $isfile0 == 1 ]] ; then
      myecho 1 "Removed: $myfile"
      isfile=1
   fi
done

if [[ $isfile == 1 ]] ; then
   myecho 1 "WARNING: files were removed, you may want to update dependencies with:\n\tmake dep"
fi

exit $mystatus
