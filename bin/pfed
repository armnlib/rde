#!/bin/ksh
# @Object: Open editor with files in build or src directory
# @Author: S.Chamberland
# @Date:   March 2014
. pfbase.inc.dot

DESC='Open editor with files in build or src directory'
USAGE="USAGE: ${MYSELF} [-h] [-b|-s|-l] [-v|-e] FILENAME [FILENAME2 ...]"

EDITOR=${EDITOR:-vi}

usage_long() {
	 toto=$(echo -e $USAGE)
	 more <<EOF
$DESC

$toto

Options:
    -h, --help : print this help
    -l, --local : locate ${SRC_USR}/FILENAME (DEFAULT)
    -r, --ref   : locate ${SRC_REF}/FILENAME
    -b, --build : locate ${BUILD_SRC}/FILENAME or ${mydirbinpre}/FILENAME 
    -v: use vi    (DEFAULT: EDITOR=${EDITOR})
    -e: use emacs (DEFAULT: EDITOR=${EDITOR})
EOF
}

mydir=${SRC_USR}
files=""
binmode=0
mydiropt="-l"
while [[ $# -gt 0 ]] ; do
   case $1 in
      (-h|--help) usage_long; exit 0;;
      (-b|--build) mydir=${BUILD_SRC} ; mydiropt="-b"; binmode=1;;
      (-l|--local) mydir=${SRC_USR}   ; mydiropt="-l"; binmode=0;;
      (-r|--ref)   mydir=${SRC_REF}   ; mydiropt="-r"; binmode=0;;
      (-e) EDITOR=emacs;;
      (-v) EDITOR=vi;;
      (--) shift ; break;;
      (-*) myerror "Option Not recognized: $1";;
        *) files="$files $1"
    esac
	 previous=$1
    shift
done
files="$files $@"

if [[ x"$files" == x" " ]] ; then
   myerror "Must provide at least one filename"
fi

locate_for_vi() {
   _item=$1
   _item2=$(echo_deleted_tag $_item)
   if [[ $mydir == ${SRC_USR} && -f ${SRC_USR}/$_item2 ]] ; then
      echo __DELETED__
      return
   fi
   if [[ $binmode == 1 && -f $BUILD_PRE/$_item && ! -f $mydir/$_item ]] ; then
      echo $BUILD_PRE/$_item
      return
   fi
   if [[ -f $mydir/$_item ]] ; then
      echo $mydir/$_item
      return
   fi
   if [[ ${_item##*/} == $_item || $mydir != ${SRC_USR} ]] ; then
      echo __NOTFOUND__
   else #NEW FILE
      echo $mydir/$_item
   fi
}

files2=" "
for item in $files ; do
   item2=$(locate_for_vi $item)
   if [[ x"$item2" == x"__NOTFOUND__" ]] ; then
      item1=$(pflocate ${mydiropt} $item)
      item1=$(echo ${item1} | sed "s|$mydir/||")
      if [[ $binmode == 1 ]] ; then
         item1=$(echo ${item1} | sed "s|$BUILD_PRE/||")
      fi
      item2=$(locate_for_vi ${item1})
   fi
   if [[ x"$item2" == x"__DELETED__" ]] ; then
      myecho 0 "WARNING: file $item was marked as deleted, before editing do,\n\tpfco $item"      
   elif [[ x"$item2" == x"__NOTFOUND__" ]] ; then
      myecho 0 "WARNING: file $item was not found in $mydir"      
   else
      files2="$files2 $item2"
   fi
done
if [[ x"$files2" != x" " ]] ; then
   echo $EDITOR $files2
   $EDITOR $files2
else
   myecho 0 "No files to edit"
fi
