#!/bin/ksh
# @Object: Link all modified source files in exp work dir
# @Author: S.Chamberland
# @Date:   March 2014
. .pfbase.inc.dot

DESC='Link all modified source files in exp work dir'
USAGE="USAGE: ${MYSELF} [-h] [-v] [-f]"

usage_long() {
	 toto=$(echo -e $USAGE)
	 more <<EOF
$DESC

$toto

Options:
    -h, --help         : print this help
    -v, --verbose      : verbose mode
    -f, --force        : 

EOF
}

myforce=0
while [[ $# -gt 0 ]] ; do
   case $1 in
      (-h|--help) usage_long; exit 0;;
      (-v|--verbose) ((verbose++));;
      (-f|--force) myforce=1;;
      (--) shift ; break;;
      (*) myerror "Option Not recognized: $1";;
    esac
	 previous=$1
    shift
done

pf_exit_if_not_pftopdir

touch .pf.flatsrc

## Clean existing
myecho 1 "Removing existing links"
for myfile in $(ls -a) ; do
   if [[ -L $myfile ]] ; then
      myfile2="$(readlink $myfile)"
      if [[ x${myfile2%%/*} == x${SRC_USR} ]] ; then
         rm -f $myfile
         myecho 2 "Removing existing link for: $myfile"
      fi
   fi
done

## Make links
for myfile in $(find ${SRC_USR} -type f) ; do

   myfilename=${myfile##*/}
   if [[ -e ${myfilename} ]] ; then
      if [[ $myforce -eq 1 ]] ; then
         rm -f ${myfilename}
         mystderr 1 "WARNING: Removing existing file for: ${myfile##*/}"
      elif [[ ! -d ${myfilename} ]] ; then
         mystderr 0 "WARNING: Will skip existing file (dup name?) for: ${myfile##*/}"
      fi
   fi

#         && x$(echo ${myfilename} | cut -c1-4) != x.rm. \

   if [[ ! -d ${myfilename} ]] ; then
      if [[ x${myfilename} != x.version_file  \
         && x${myfilename} != x.restricted \
         && x${myfilename%%.*} != xMakefile ]] ; then
         ln -s $myfile ${myfilename}
      else
         myecho 2 "Skipping: $myfile"
      fi
   else
      mystderr 0 "Error: ${myfilename} is a dir, Cannot link: ${myfile}"
   fi

done
